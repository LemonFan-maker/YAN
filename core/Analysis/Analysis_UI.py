# -*- coding: utf-8 -*-
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QCoreApplication, QRegExp
from PyQt5.QtWidgets import QWidget, QFileDialog, QPushButton, QGridLayout, QApplication, QMainWindow, QMessageBox
from wordcloud import WordCloud
import tempfile, os, shutil
from wordcloud import ImageColorGenerator
import numpy as n
from PIL import Image
import ctypes, re

ctypes.windll.shell32.SetCurrentProcessExplicitAppUserModelID("996")
class Ui_MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(943, 584)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setTabBarAutoHide(True)
        self.tabWidget.setObjectName("tabWidget")
        self.WordCloud = QtWidgets.QWidget()
        self.WordCloud.setObjectName("WordCloud")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.WordCloud)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.textBrowser = QtWidgets.QTextBrowser(self.WordCloud)
        self.textBrowser.setStyleSheet("QTextBrowser{\n"
"    font-size:18px;\n"
"    }")
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout.addWidget(self.textBrowser)
        self.gridLayout_2.addLayout(self.verticalLayout, 1, 1, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton_Open = QtWidgets.QPushButton(self.WordCloud)
        self.pushButton_Open.setObjectName("pushButton_Open")
        self.gridLayout.addWidget(self.pushButton_Open, 0, 0, 1, 1, QtCore.Qt.AlignLeft)
        self.pushButton_Save = QtWidgets.QPushButton(self.WordCloud)
        self.pushButton_Save.setObjectName("pushButton_Save")
        self.gridLayout.addWidget(self.pushButton_Save, 2, 0, 1, 1)
        self.pushButton_Exit = QtWidgets.QPushButton(self.WordCloud)
        self.pushButton_Exit.setObjectName("pushButton_Exit")
        self.gridLayout.addWidget(self.pushButton_Exit, 4, 0, 1, 1)
        self.pushButton_View = QtWidgets.QPushButton(self.WordCloud)
        self.pushButton_View.setObjectName("pushButton_View")
        self.gridLayout.addWidget(self.pushButton_View, 1, 0, 1, 1)
        self.pushButton_Clear = QtWidgets.QPushButton(self.WordCloud)
        self.pushButton_Clear.setObjectName("pushButton_Clear")
        self.gridLayout.addWidget(self.pushButton_Clear, 3, 0, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.tabWidget.addTab(self.WordCloud, "")
        self.Relative = QtWidgets.QWidget()
        self.Relative.setObjectName("Relative")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.Relative)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_3 = QtWidgets.QLabel(self.Relative)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_4.addWidget(self.label_3)
        self.lineEdit_Relative = QtWidgets.QLineEdit(self.Relative)
        self.lineEdit_Relative.setObjectName("lineEdit_Relative")
        self.horizontalLayout_4.addWidget(self.lineEdit_Relative)
        self.verticalLayout_5.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.pushButton_Relative_Open = QtWidgets.QPushButton(self.Relative)
        self.pushButton_Relative_Open.setObjectName("pushButton_Relative_Open")
        self.verticalLayout_7.addWidget(self.pushButton_Relative_Open)
        self.pushButton_Relative_Create = QtWidgets.QPushButton(self.Relative)
        self.pushButton_Relative_Create.setObjectName("pushButton_Relative_Create")
        self.verticalLayout_7.addWidget(self.pushButton_Relative_Create)
        self.pushButton_Relative_View = QtWidgets.QPushButton(self.Relative)
        self.pushButton_Relative_View.setObjectName("pushButton_Relative_View")
        self.verticalLayout_7.addWidget(self.pushButton_Relative_View)
        self.pushButton_Relative_Clear = QtWidgets.QPushButton(self.Relative)
        self.pushButton_Relative_Clear.setObjectName("pushButton_Relative_Clear")
        self.verticalLayout_7.addWidget(self.pushButton_Relative_Clear)
        self.pushButton_Relative_Save = QtWidgets.QPushButton(self.Relative)
        self.pushButton_Relative_Save.setObjectName("pushButton_Relative_Save")
        self.verticalLayout_7.addWidget(self.pushButton_Relative_Save)
        self.pushButton_Relative_Exit = QtWidgets.QPushButton(self.Relative)
        self.pushButton_Relative_Exit.setObjectName("pushButton_Relative_Exit")
        self.verticalLayout_7.addWidget(self.pushButton_Relative_Exit)
        self.horizontalLayout_6.addLayout(self.verticalLayout_7)
        self.graphicsView_Relative = QtWidgets.QGraphicsView(self.Relative)
        self.graphicsView_Relative.setObjectName("graphicsView_Relative")
        self.horizontalLayout_6.addWidget(self.graphicsView_Relative)
        self.verticalLayout_5.addLayout(self.horizontalLayout_6)
        self.tabWidget.addTab(self.Relative, "")
        self.Money = QtWidgets.QWidget()
        self.Money.setObjectName("Money")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.Money)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.Money)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_2 = QtWidgets.QLabel(self.Money)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 5, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.radioButton_Full = QtWidgets.QRadioButton(self.Money)
        self.radioButton_Full.setObjectName("radioButton_Full")
        self.gridLayout_3.addWidget(self.radioButton_Full, 0, 2, 1, 1)
        self.Price = QtWidgets.QLabel(self.Money)
        self.Price.setObjectName("Price")
        self.gridLayout_3.addWidget(self.Price, 4, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.Subscribe = QtWidgets.QLabel(self.Money)
        self.Subscribe.setObjectName("Subscribe")
        self.gridLayout_3.addWidget(self.Subscribe, 2, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.lineEdit_Tax = QtWidgets.QLineEdit(self.Money)
        self.lineEdit_Tax.setObjectName("lineEdit_Tax")
        self.gridLayout_3.addWidget(self.lineEdit_Tax, 3, 2, 1, 1)
        self.Tax = QtWidgets.QLabel(self.Money)
        self.Tax.setObjectName("Tax")
        self.gridLayout_3.addWidget(self.Tax, 3, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.lineEdit_Subscribe = QtWidgets.QLineEdit(self.Money)
        self.lineEdit_Subscribe.setObjectName("lineEdit_Subscribe")
        self.gridLayout_3.addWidget(self.lineEdit_Subscribe, 2, 2, 1, 1)
        self.Words = QtWidgets.QLabel(self.Money)
        self.Words.setObjectName("Words")
        self.gridLayout_3.addWidget(self.Words, 1, 0, 1, 1, QtCore.Qt.AlignHCenter)
        self.Full_Addence = QtWidgets.QLabel(self.Money)
        self.Full_Addence.setObjectName("Full_Addence")
        self.gridLayout_3.addWidget(self.Full_Addence, 0, 0, 1, 1)
        self.lineEdit_Price = QtWidgets.QLineEdit(self.Money)
        self.lineEdit_Price.setObjectName("lineEdit_Price")
        self.gridLayout_3.addWidget(self.lineEdit_Price, 4, 2, 1, 1)
        self.lineEdit_Words = QtWidgets.QLineEdit(self.Money)
        self.lineEdit_Words.setObjectName("lineEdit_Words")
        self.gridLayout_3.addWidget(self.lineEdit_Words, 1, 2, 1, 1)
        self.label_Total = QtWidgets.QLabel(self.Money)
        self.label_Total.setText("")
        self.label_Total.setObjectName("label_Total")
        self.gridLayout_3.addWidget(self.label_Total, 5, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.verticalLayout_2.addLayout(self.gridLayout_3)
        self.pushButton_Calc = QtWidgets.QPushButton(self.Money)
        self.pushButton_Calc.setObjectName("pushButton_Calc")
        self.verticalLayout_2.addWidget(self.pushButton_Calc)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem)
        self.horizontalLayout_3.addLayout(self.verticalLayout_2)
        self.tabWidget.addTab(self.Money, "")
        self.horizontalLayout.addWidget(self.tabWidget)
        self.horizontalLayout_2.addLayout(self.horizontalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        # 绑定事件槽
        self.pushButton_Open.clicked.connect(self.Open)
        self.pushButton_Exit.clicked.connect(QCoreApplication.instance().quit)
        self.pushButton_Clear.clicked.connect(self.Clear)
        self.pushButton_View.clicked.connect(self.View)
        self.pushButton_Save.clicked.connect(self.Save)
        self.pushButton_Calc.clicked.connect(self.Calc)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_Open.setText(_translate("MainWindow", "打开本地文件"))
        self.pushButton_Save.setText(_translate("MainWindow", "保存到本地"))
        self.pushButton_Exit.setText(_translate("MainWindow", "退出"))
        self.pushButton_View.setText(_translate("MainWindow", "预览云图"))
        self.pushButton_Clear.setText(_translate("MainWindow", "清空"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.WordCloud), _translate("MainWindow", "词云"))
        self.label_3.setText(_translate("MainWindow", "核心人物(用英语“;”分割)"))
        self.pushButton_Relative_Open.setText(_translate("MainWindow", "打开文件"))
        self.pushButton_Relative_Create.setText(_translate("MainWindow", "制作关系图"))
        self.pushButton_Relative_View.setText(_translate("MainWindow", "预览结果"))
        self.pushButton_Relative_Clear.setText(_translate("MainWindow", "清除输入"))
        self.pushButton_Relative_Save.setText(_translate("MainWindow", "保存本地"))
        self.pushButton_Relative_Exit.setText(_translate("MainWindow", "退出"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Relative), _translate("MainWindow", "人物分析"))
        self.label.setText(_translate("MainWindow", "起点稿费计算"))
        self.label_2.setText(_translate("MainWindow", "估计稿费"))
        self.radioButton_Full.setText(_translate("MainWindow", "是否全勤"))
        self.Price.setText(_translate("MainWindow", "千字价格"))
        self.Subscribe.setText(_translate("MainWindow", "均订"))
        self.lineEdit_Tax.setText(_translate("MainWindow", "0.888"))
        self.Tax.setText(_translate("MainWindow", "税率"))
        self.Words.setText(_translate("MainWindow", "字数"))
        self.Full_Addence.setText(_translate("MainWindow", "全勤(日更4000)"))
        self.lineEdit_Price.setText(_translate("MainWindow", "2.325"))
        self.pushButton_Calc.setText(_translate("MainWindow", "计算"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Money), _translate("MainWindow", "稿费计算"))
    
    def Calc(self):
        Subscribe = self.lineEdit_Subscribe.text()
        Price = self.lineEdit_Price.text()
        Tax = self.lineEdit_Tax.text()
        Words = self.lineEdit_Words.text()
        if re.match('\d+(\.\d+)?', Subscribe) and re.match('\d+(\.\d+)?', Price) and re.match('\d+(\.\d+)?', Tax) and re.match('\d+(\.\d+)?', Words):
            pass
        else:
            QMessageBox.warning(self,'警告','仅支持输入正整数和正小数')
        
        if self.radioButton_Full.isChecked() == True:
            Total = (((((float(Words)*30)/1000)*float(Subscribe)*2.325)/100)*float(Tax))+800+600
        else:
            Total = (((((float(Words)*30)/1000)*float(Subscribe)*2.325)/100)*float(Tax))+800
        
        if Total > 800 and self.radioButton_Full.isChecked() == True:
            Total = ((((((float(Words)*30)/1000)*float(Subscribe)*2.325)/100)-800)*float(Tax))+800+600
        
        if Total > 800 and self.radioButton_Full.isChecked() == False:
            Total = ((((((float(Words)*30)/1000)*float(Subscribe)*2.325)/100)-800)*float(Tax))+800
        
        if Total >0:
            self.label_Total.setText(str(round(Total, 2)))
        if Total < 0:
            self.label_Total.setText('加油哦，稿费似乎不够')

    def Clear(self):
        self.textBrowser.clear()

    def Open(self):
        self.file,fileType = QFileDialog.getOpenFileName(self, 'open file', './', "text files (*.*)")
        if self.file:
            with open(self.file, 'r', encoding='utf-8') as f:
                self.textBrowser.append(f.read())
    
    def Cloud(self):
        bg=n.array(Image.open('core\\Analysis\\assets\\I.png')) #将图片以数组形式输出
        if self.file:
            with open(self.file, 'r', encoding='utf-8') as f:
                data = f.read()
                cloud = WordCloud(font_path=r'assets\WordCloud.ttf',
                                mode='RGBA',
                                mask=bg,
                                repeat=True,
                                background_color='#FFFFFF',
                                random_state=8,
                                scale=2).generate(data)
                ig=ImageColorGenerator(bg) #图片颜色导入
                cloud.recolor(color_func=ig) #重新设置词云图颜色
                temp = tempfile.mkdtemp()
                self.pic = temp + "\\Cloud.png"
                cloud.to_file(self.pic)

    def View(self):
        self.Cloud()
        im = Image.open(self.pic)
        im.show()

    def Save(self):
        try:
            self.pic
        except AttributeError:
            self.Cloud()

        dirs = self.pic
        file= QFileDialog.getExistingDirectory(self, 'save file', './')

        if os.path.exists(file+"\\Cloud.png"):
            confirm = QMessageBox.question(self,'覆盖','发现重文件，是否覆盖?',QMessageBox.Yes|QMessageBox.No,QMessageBox.No)
            if confirm == QMessageBox.Yes:
                os.remove(file+"\\Cloud.png")
                shutil.move(dirs, file)
                QMessageBox.about(self,'提示','保存成功,在'+file+"目录下")
            if confirm == QMessageBox.No:
                pass
        else:
            shutil.move(dirs, file)
            QMessageBox.about(self,'提示','保存成功,在'+self.file+"目录下")